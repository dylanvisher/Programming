#lang scheme
(require scheme/system)
(require "pic-processing.ss")
(define SERVICE-PORT1 9001)
(define SERVER-HOST1 "pc10.lab101")
(define SERVICE-PORT2 1024)
(define SERVER-HOST2 "pc21.lab101")
(define N1 (with-input-from-file "weightsN1.ss" read))
(define N2 (with-input-from-file "weightsN2.ss" read))
(define (client)
  (let loop ()
  (let-values ([(server->me1 me->server1)
                (tcp-connect SERVER-HOST1 SERVICE-PORT1)]
               [(server->me2 me->server2)
                (tcp-connect SERVER-HOST2 SERVICE-PORT2)])
    (close-input-port server->me2)
    (close-output-port me->server1)
    (local ((define response (read server->me1))
            (define jpegpic (string-append response ".jpg"))
            (define pic (string-append response ".png"))
            (define processed (real-time-process N1 N2 pic)))
      
      (close-input-port server->me1)
      ;(display response) (newline)
      ;(write response me->server2)
      ;(write pic me->server2)
      (display processed)
      (write processed me->server2)
       (close-output-port me->server2)
      
      (system (string-append "rm "jpegpic))
      (system (string-append "rm "pic))      
      )) (loop)))
(client)